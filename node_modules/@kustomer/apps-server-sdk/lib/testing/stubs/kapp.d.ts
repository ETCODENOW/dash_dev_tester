/// <reference types="jest" />
import sinon from 'sinon';
import { KApp } from '../../kapp';
import { KAppOptions } from '../../options';
import * as api from '../../api';
declare type APIStub = sinon.SinonStubbedInstance<api.Orgs & {
    readonly customers: sinon.SinonStubbedInstance<api.Customers>;
    readonly kobjects: sinon.SinonStubbedInstance<api.KObjects>;
    readonly settings: sinon.SinonStubbedInstance<api.Settings>;
    readonly messages: sinon.SinonStubbedInstance<api.Messages>;
    readonly log: sinon.SinonStubbedInstance<api.Log>;
}>;
export declare class KAppStub<KAppSettings = any> extends KApp<KAppSettings> {
    onInstall?: (userId: string, orgId: string) => void;
    onEnable?: (userId: string, orgId: string) => void;
    onDisable?: (userId: string, orgId: string) => void;
    private readonly _orgs;
    constructor(options?: Partial<KAppOptions>);
    start: jest.Mock<Promise<void>, []>;
    stop: jest.Mock<Promise<void>, []>;
    org(_identifier: string): APIStub;
}
export {};
