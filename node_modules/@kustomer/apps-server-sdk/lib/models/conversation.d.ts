export declare type ConversationStatus = 'open' | 'snoozed' | 'done';
export interface ConversationCustomerWait {
    readonly time?: number;
    readonly businessTime?: number;
    readonly updatedAt?: Date;
    readonly timeSinceLastDone?: number;
    readonly businessTimeSinceLastDone?: number;
    readonly businessTimeBySchedule?: number;
    readonly businessTimeByScheduleSinceLastDone?: number;
}
export interface ConversationLastMessageIn<T = any> {
    readonly id: string;
    readonly channel?: string;
    readonly meta?: T;
    readonly sentAt?: Date;
    readonly createdAt?: Date;
}
export interface ConversationLastMessageOut {
    readonly id: string;
    readonly sentAt?: Date;
    readonly createdAt?: Date;
    readonly createdBy?: string;
}
export interface Conversation<T = any> {
    readonly name: string;
    readonly externalId?: string;
    readonly status: ConversationStatus;
    readonly brand?: string;
    readonly preview?: string;
    readonly satisfaction?: number;
    readonly customerWait?: ConversationCustomerWait;
    readonly priority?: number;
    readonly custom?: T;
    readonly lastMessageIn?: ConversationLastMessageIn;
    readonly lastMessageOut?: ConversationLastMessageOut;
    readonly lastMessageAt?: Date;
}
